services:
  frontend:
    container_name: angular-app
    build:
      context: ./frontend/angular-app
    image: angular-app-v1
    ports:
      - "9000:80" 
    networks:
      - app-network 
    depends_on:
      - master_db
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: fluentd:24224
        tag: httpd.access

  backend:
    container_name: django-app
    build:
      context: ./backend/myproject
    image: django-app-v1
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - master_db
  ## database services
  master_db:
    container_name: master_db
    restart: always
    build: 
      context: ./data/PostgreSQLdb/master
    ports:
      - "5433:5433"
    volumes:
      - master_db:/var/lib/postgresql/data
    networks:
      - app-network
    depends_on:
      fluentd:
        condition: service_healthy

  replica_db:
    container_name: replica_db
    restart: always
    build: 
      context: ./data/PostgreSQLdb/replica
    depends_on:
      - master_db
    ports:
      - "5434:5433"
    volumes:
      - replica_db:/var/lib/postgresql/data
    networks:
      - app-network

  ## logs services
  fluentd:
    container_name: fluentd
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:24224"]
      interval: 10s
      timeout: 5s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
    expose:
      - "9200"
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.1
    links:
      - "elasticsearch"
    ports:
      - "5601:5601"
    networks:
      - app-network

volumes:
  master_db:
  replica_db:

networks:
  app-network:
    driver: bridge
  