services:
  frontend:
    container_name: angular-app
    build:
      context: ./frontend/angular-app
    image: angular-app-v1
    ports:
      - "9000:80" 
    networks:
      - app-network 
    depends_on:
      - master_db

  backend:
    container_name: django-app
    build:
      context: ./backend/myproject
    image: django-app-v1
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - master_db

  master_db:
    container_name: master_db
    restart: always
    build: 
      context: ./data/PostgreSQLdb/master
    ports:
      - "5433:5433"
    volumes:
      - master_db:/var/lib/postgresql/data
    networks:
      - app-network
    depends_on:
      - logspout

  replica_db:
    container_name: replica_db
    restart: always
    build: 
      context: ./data/PostgreSQLdb/replica
    depends_on:
      - master_db
    ports:
      - "5434:5433"
    volumes:
      - replica_db:/var/lib/postgresql/data
    networks:
      - app-network

  logspout:
    image: gliderlabs/logspout:master
    container_name: logs_container
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/logs:/logs
    environment:
      - ROUTE_URIS=file:///logs 
      - "SYSLOG_FORMAT=rfc3164"
      - "LOGSPOUT=ignore"
    networks:
      - app-network

volumes:
  master_db:
  replica_db:

networks:
  app-network:
    driver: bridge
  